<?xml version="1.0" encoding="UTF-8"?>
<!-- 
This file is protected by Copyright. Please refer to the COPYRIGHT file distributed with this 
source distribution.

This file is part of REDHAWK Basic Components TuneFilterDecimate.

REDHAWK Basic Components TuneFilterDecimate is free software: you can redistribute it and/or modify it under the terms of 
the GNU Lesser General Public License as published by the Free Software Foundation, either 
version 3 of the License, or (at your option) any later version.

REDHAWK Basic Components TuneFilterDecimate is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with this 
program.  If not, see http://www.gnu.org/licenses/.
-->
<!DOCTYPE properties PUBLIC "-//JTRS//DTD SCA V2.2.2 PRF//EN" "properties.dtd">
<properties>
  <simple id="TuneMode" mode="readwrite" type="string">
    <description>This property determines which of the properties is used for setting the signal input frequency.  
NORM chorosponds to the TuningNorm property.
IF chorosponds to the TuningIF property.
RF chorosponds to the TuningIF property.

Here are the relationships between these values:

TuningNorm = (TuningIF /InputSampleRate)
TuningRF = TuningIF - chan_if + InputRF

(chan_if = 0 for complex inputs or  InputSampleRate/4.0 for real signals)</description>
    <value>NORM</value>
    <enumerations>
      <enumeration label="NORM" value="NORM"/>
      <enumeration label="IF" value="IF"/>
      <enumeration label="RF" value="RF"/>
    </enumerations>
    <kind kindtype="execparam"/>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="TuningNorm" mode="readwrite" type="double">
    <description>Display the tune frequency in normalized units.
TuneNorm is the tuneIF/sampleing Frequency</description>
    <value>0.0</value>
    <range max="0.5" min="-0.5"/>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="TuningIF" mode="readwrite" type="double">
    <description>This is the tune frequncy in terms of the IF frequency range.  </description>
    <value>0</value>
    <units>Hz</units>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="TuningRF" mode="readwrite" type="ulonglong">
    <description>This is the tune frequency mapped to the RF band.  The InputRF property is used to help with this mapping.</description>
    <value>0</value>
    <units>Hz</units>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="FilterBW" mode="readwrite" type="float">
    <description>Filter bandwidth to the signal of interest.  This should be less than the DesiredOutputRate but greater then the bandwidth of the signal of interest</description>
    <value>8000</value>
    <units>Hz</units>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="DesiredOutputRate" mode="readwrite" type="float">
    <description>Requested output sample rate.  This should be bigger than the FilterBW.</description>
    <value>10000</value>
    <units>Hz</units>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="InputRF" mode="readonly" type="double">
    <description>The RF associated with this signal.  This is set by the keywords in the SRI.  IF CHAN_IF is present its value takes presidence.  Otherwise COL_IF is used if present.  If neither is present then this value is invalid and RF TuneMode is disabled.</description>
    <value>0.0</value>
    <units>Hz</units>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="InputRate" mode="readonly" type="double">
    <description>Sampling rate of the input data.</description>
    <value>0.0</value>
    <units>Hz</units>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <simple id="DecimationFactor" mode="readonly" type="ulong">
    <description>Actual decimation value chosen.</description>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
  <struct id="filterProps" mode="readwrite">
    <description>Advanced filterProps for custom filter configuration</description>
    <simple id="FFT_size" type="ulong">
      <description>Size of FFT in the FIR filter implementation.</description>
      <value>128</value>
    </simple>
    <simple id="TransitionWidth" mode="readwrite" type="double">
      <description>Desired transition region width.  Lower TransitionWidth requires more filter taps (and more compuation) but gets a better frequency response.</description>
      <value>800</value>
      <units>Hz</units>
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <simple id="Ripple" mode="readwrite" type="double">
      <description>Maximum bound on error in filter pass/stop bands</description>
      <value>0.01</value>
      <range max="1" min="0"/>
      <kind kindtype="configure"/>
      <action type="external"/>
    </simple>
    <configurationkind kindtype="configure"/>
  </struct>
  <simple id="taps" mode="readonly" type="ulong">
    <description>Number of filter coefficients, a.k.a. taps</description>
    <kind kindtype="configure"/>
    <action type="external"/>
  </simple>
</properties>
